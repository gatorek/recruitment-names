services:
  db:
    image: postgres:14.19-alpine
    env_file:
      - .env.dev
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:${POSTGRES_PORT:-5432}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  phoenix:
    build:
      context: ./phoenix-api
      dockerfile: Dockerfile.dev
    env_file:
      - .env.dev
    ports:
      - "4000:${PORT:-4000}"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./phoenix-api:/app
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://${PHX_HOST:-phoenix}:${PORT:-4000}/healthcheck || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 20
      start_period: 40s
    command: >
      sh -c "
        mix deps.get &&
        mix ecto.migrate &&
        mix phx.server
      "

  symfony:
    build:
      context: ./symfony-app
      dockerfile: Dockerfile.dev
    env_file:
      - .env.dev
    ports:
      - "8000:8000"
    volumes:
      - ./symfony-app:/var/www/html
    depends_on:
      phoenix:
        condition: service_healthy
    command: >
      sh -c "
        composer install &&
        php -S 0.0.0.0:8000 -t public
      "

volumes:
  postgres_dev_data:
